const express = require("express");
const path = require("path");
const axios = require("axios");
const multer = require("multer");
require("dotenv").config();

const app = express();
const PORT = process.env.PORT || 3000;

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Telegram –±–æ—Ç–∞
const TELEGRAM_BOT_TOKEN = "8355589382:AAErPJi6IS5EcWhOwTVLqH5DU7Vxp0GzMUM";
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID; // –ü–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ chat_id –≥—Ä—É–ø–∏

const upload = multer({
  dest: "uploads/",
  limits: {
    fileSize: 10 * 1024 * 1024, // 10MB limit
  },
});

app.use(express.static(path.join(__dirname, "public")));
// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static(__dirname));

// –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "contact.html"));
});

app.post("/send-message", upload.single("attachment"), async (req, res) => {
  try {
    const {
      firstName,
      lastName,
      email,
      phone,
      company,
      position,
      github,
      linkedin,
      telegram,
      telegramUsername,
      website,
      projectType,
      budget,
      deadline,
      projectDetails,
      privacyConsent,
    } = req.body;

    console.log("[v0] Received form data:", {
      firstName: !!firstName,
      lastName: !!lastName,
      email: !!email,
      phone: !!phone,
      projectType: !!projectType,
      budget: !!budget,
      projectDetails: !!projectDetails,
      privacyConsent: !!privacyConsent,
      hasFile: !!req.file,
    });

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
    if (
      !firstName ||
      !lastName ||
      !email ||
      !phone ||
      !projectType ||
      !budget ||
      !projectDetails ||
      !privacyConsent
    ) {
      console.log("[v0] Validation failed - missing required fields");
      return res.status(400).json({
        error:
          "–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è —Ç–∞ –¥–∞–π—Ç–µ –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö",
      });
    }

    const telegramMessage = `üîî <b>–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ—ó —Ñ–æ—Ä–º–∏</b>

üë§ <b>–Ü–º'—è:</b> ${firstName}
üë§ <b>–ü—Ä—ñ–∑–≤–∏—â–µ:</b> ${lastName}
üìß <b>Email:</b> ${email}
üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone}
${company ? `üè¢ <b>–ö–æ–º–ø–∞–Ω—ñ—è:</b> ${company}\n` : ""}${
      position ? `üíº <b>–ü–æ—Å–∞–¥–∞:</b> ${position}\n` : ""
    }
üåê <b>–°–æ—Ü–º–µ—Ä–µ–∂—ñ:</b>
${github ? `üêô <b>GitHub:</b> ${github}\n` : ""}${
      linkedin ? `üíº <b>LinkedIn:</b> ${linkedin}\n` : ""
    }${telegram ? `üí¨ <b>Telegram:</b> ${telegram}\n` : ""}${
      telegramUsername ? `üì± <b>–ù—ñ–∫ —É Telegram:</b> ${telegramUsername}\n` : ""
    }${website ? `üåç <b>–í–µ–±—Å–∞–π—Ç/–ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ:</b> ${website}\n` : ""}
üìã <b>–î–µ—Ç–∞–ª—ñ –ø—Ä–æ–µ–∫—Ç—É:</b>
üéØ <b>–¢–∏–ø –ø—Ä–æ–µ–∫—Ç—É:</b> ${projectType}
üí∞ <b>–ë—é–¥–∂–µ—Ç:</b> ${budget}
${deadline ? `‚è≥ <b>–î–µ–¥–ª–∞–π–Ω:</b> ${deadline}\n` : ""}
üìù <b>–û–ø–∏—Å –ø—Ä–æ–µ–∫—Ç—É:</b>
${projectDetails}

${
  req.file
    ? `üìé <b>–ü—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π —Ñ–∞–π–ª:</b> ${req.file.originalname} (${Math.round(
        req.file.size / 1024
      )} KB)`
    : "üìé <b>–§–∞–π–ª–∏:</b> –ù–µ –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–æ"
}

‚úÖ <b>–ó–≥–æ–¥–∞ –Ω–∞ –æ–±—Ä–æ–±–∫—É –¥–∞–Ω–∏—Ö:</b> –ù–∞–¥–∞–Ω–æ

‚è∞ <b>–ß–∞—Å:</b> ${new Date().toLocaleString("uk-UA")}`;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ TELEGRAM_CHAT_ID
    if (!TELEGRAM_CHAT_ID) {
      console.error("TELEGRAM_CHAT_ID –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
      return res.status(500).json({
        error:
          "–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
      });
    }

    console.log("[v0] Sending message to Telegram:", {
      chat_id: TELEGRAM_CHAT_ID,
      message_length: telegramMessage.length,
      hasFile: !!req.file,
    });

    const telegramResponse = await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`,
      {
        chat_id: TELEGRAM_CHAT_ID,
        text: telegramMessage,
        parse_mode: "HTML",
      }
    );

    if (req.file) {
      try {
        const fs = require("fs");
        const FormData = require("form-data");

        const form = new FormData();
        form.append("chat_id", TELEGRAM_CHAT_ID);
        form.append(
          "document",
          fs.createReadStream(req.file.path),
          req.file.originalname
        );
        form.append("caption", `üìé –§–∞–π–ª –≤—ñ–¥ ${firstName} ${lastName}`);

        await axios.post(
          `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument`,
          form,
          {
            headers: form.getHeaders(),
          }
        );

        // Clean up uploaded file
        fs.unlinkSync(req.file.path);
      } catch (fileError) {
        console.error("Error sending file to Telegram:", fileError);
        // Continue even if file upload fails
      }
    }

    console.log("[v0] Telegram response:", telegramResponse.data);

    if (telegramResponse.data.ok) {
      res.json({
        success: true,
        message: "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!",
      });
    } else {
      throw new Error("–ü–æ–º–∏–ª–∫–∞ Telegram API");
    }
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", error);

    if (error.response && error.response.data) {
      console.error("Telegram API Error:", error.response.data);
    }

    res.status(500).json({
      error: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.",
    });
  }
});

// –î–æ–ø–æ–º—ñ–∂–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è chat_id (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ç–∏–º—á–∞—Å–æ–≤–æ)
app.get("/get-chat-id", async (req, res) => {
  try {
    const response = await axios.get(
      `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getUpdates`
    );
    res.json(response.data);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`–í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:${PORT} —É –±—Ä–∞—É–∑–µ—Ä—ñ`);

  if (!TELEGRAM_CHAT_ID) {
    console.log("\n‚ö†Ô∏è  –£–í–ê–ì–ê: –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ TELEGRAM_CHAT_ID");
    console.log("–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è chat_id –≥—Ä—É–ø–∏:");
    console.log("1. –î–æ–¥–∞–π—Ç–µ –±–æ—Ç–∞ @CVportfolio_messages_bot –¥–æ –≥—Ä—É–ø–∏");
    console.log("2. –ù–∞–¥–∞–π—Ç–µ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞");
    console.log("3. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –±—É–¥—å-—è–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –≥—Ä—É–ø—É");
    console.log("4. –í—ñ–¥–≤—ñ–¥–∞–π—Ç–µ http://localhost:3000/get-chat-id");
    console.log(
      "5. –ó–Ω–∞–π–¥—ñ—Ç—å chat_id –≥—Ä—É–ø–∏ (–Ω–µ–≥–∞—Ç–∏–≤–Ω–µ —á–∏—Å–ª–æ) —Ç–∞ –¥–æ–¥–∞–π—Ç–µ –π–æ–≥–æ –¥–æ .env —Ñ–∞–π–ª—É"
    );
    console.log("   –ü—Ä–∏–∫–ª–∞–¥: TELEGRAM_CHAT_ID=-1001234567890");
  }
});
